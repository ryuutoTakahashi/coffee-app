version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-coffee-tasting}-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-coffee_tasting}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      TZ: Asia/Tokyo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - coffee-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-coffee_tasting}"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - full

  coffee-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-coffee-tasting}-api
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      DB_USERNAME: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      JWT_SECRET: ${JWT_SECRET:-defaultSecretKeyForDevelopmentOnlyChangeInProduction}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - coffee-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/public/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - full

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${COMPOSE_PROJECT_NAME:-coffee-tasting}-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@coffeetasting.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - coffee-network
    profiles:
      - dev
      - full

volumes:
  postgres_data:

networks:
  coffee-network:
    driver: bridge 